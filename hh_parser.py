import requests
import json
import csv


def get_area_id_by_name(city_name):
    url = "https://api.hh.ru/areas"
    response = requests.get(url)
    regions = response.json()

    for country in regions:
        for region in country["areas"]:
            if city_name.lower() in region["name"].lower():
                return region["id"]
            for city in region["areas"]:
                if city_name.lower() in city["name"].lower():
                    return city["id"]
    return 1  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ú–æ—Å–∫–≤–∞


def get_all_vacancies(keyword, area_id):
    url = "https://api.hh.ru/vacancies"
    page = 0
    per_page = 20
    all_vacancies = []

    while True:
        params = {"text": keyword, "area": area_id, "per_page": per_page, "page": page}

        response = requests.get(url, params=params)
        data = response.json()

        vacancies = data.get("items", [])
        if not vacancies:
            break

        all_vacancies.extend(vacancies)

        if page >= data.get("pages", 0) - 1:
            break

        page += 1

    return all_vacancies


def save_to_csv(vacancies, filename="vacancies.csv"):
    with open(filename, mode="w", encoding="utf-8", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ì–æ—Ä–æ–¥", "–°—Å—ã–ª–∫–∞"])

        for vacancy in vacancies:
            name = vacancy["name"]
            salary = vacancy.get("salary")
            if salary:
                _from = salary.get("from") or ""
                _to = salary.get("to") or ""
                currency = salary.get("currency") or ""
                salary_str = f"{_from} - {_to} {currency}".strip()
            else:
                salary_str = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

            city = vacancy["area"]["name"]
            link = vacancy["alternate_url"]

            writer.writerow([name, salary_str, city, link])

def save_to_json(vacancies, filename="vacancies.json"):
            with open(filename, mode="w", encoding="utf-8") as file:
                json.dump(vacancies, file, indent=4, ensure_ascii=False)            


def main():
    keyword = input("üîé –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: ")
    city = input("üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—Å–∫–≤–∞): ")
    area_id = get_area_id_by_name(city)
    print(f"üìç –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω—É: {city} (area_id = {area_id})")

    vacancies = get_all_vacancies(keyword, area_id)

    if not vacancies:
        print("‚ö†Ô∏è –í–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    format_choice = input("üíæ –í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å? (csv/json): ").strip().lower()

    if format_choice == "json":
        save_to_json(vacancies)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(vacancies)} –≤–∞–∫–∞–Ω—Å–∏–π –≤ 'vacancies.json'")
    else:
        save_to_csv(vacancies)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(vacancies)} –≤–∞–∫–∞–Ω—Å–∏–π –≤ 'vacancies.csv'")

